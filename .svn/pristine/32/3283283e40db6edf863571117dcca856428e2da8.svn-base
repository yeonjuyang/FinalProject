<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.workforest.chat.mapper.ChattingMapper">
	
	<select id="getAllChatRoom" resultType="chatRoomVO">
		SELECT CHAT_ROOM_NO
		FROM CHAT_ROOM
	</select>
	
	<select id="getOverMsgCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(MSSAGE_NO)
		FROM MESSAGE
		WHERE MSSAGE_DATE > (SELECT LAST_DATE 
							 FROM CHATROOM_EMPLOYEE
							 WHERE CHAT_ROOM_NO = #{chatRoomNo}
							 AND EMP_NO = #{empNo}
							 )
		AND CHAT_ROOM_NO = #{chatRoomNo}
		AND EMP_NO = #{empNo}
	</select>
	
	<select id="getChatRoom" parameterType="hashMap" resultType="chatRoomEmployeeVO">
		SELECT CE.CHAT_ROOM_NO, CR.CHAT_ROOM_NM, CE.EMP_NO
		FROM CHATROOM_EMPLOYEE CE
		INNER JOIN CHAT_ROOM CR ON CE.CHAT_ROOM_NO = CR.CHAT_ROOM_NO
		LEFT JOIN (
		    SELECT M.CHAT_ROOM_NO, MAX(TO_NUMBER(MSSAGE_NO)) AS MAX_NO
		    FROM MESSAGE M
		    GROUP BY M.CHAT_ROOM_NO
		) MN ON CR.CHAT_ROOM_NO = MN.CHAT_ROOM_NO
		WHERE CE.EMP_NO = #{empNo}
		ORDER BY MN.MAX_NO DESC NULLS LAST
	</select>
	
	<select id="getChat" parameterType="hashMap" resultType="messageVO">
		SELECT M.CHAT_ROOM_NO, M.MSSAGE_NO, M.EMP_NO, M.MSSAGE_CN, M.ATCHMNFL_NO, M.MSSAGE_DATE, E.EMP_NM
		FROM MESSAGE M, EMPLOYEE E
		WHERE M.CHAT_ROOM_NO = #{chatRoomNo}
		AND M.EMP_NO = E.EMP_NO
		AND M.MSSAGE_DATE > (SELECT APPLY_DATE 
							 FROM CHATROOM_EMPLOYEE 
							 WHERE EMP_NO = #{empNo}
							 AND CHAT_ROOM_NO = #{chatRoomNo})
		ORDER BY M.MSSAGE_DATE ASC
	</select>
	
	<insert id="addChat" parameterType="hashMap">
		INSERT INTO MESSAGE(MSSAGE_NO, CHAT_ROOM_NO, EMP_NO, MSSAGE_CN, ATCHMNFL_NO, MSSAGE_DATE)
		VALUES(MSG_SEQ.NEXTVAL,#{chatRoomNo},#{empNo},#{content},null,sysdate)
	</insert>
	
	<select id="getEmp" parameterType="hashMap" resultType="empVO">
		SELECT EMP_NO, EMP_NM
		FROM EMPLOYEE
		WHERE EMP_NO = #{empNo}
	</select>
	
	<select id="getChatRoomLastChat" parameterType="hashMap" resultType="messageVO">
		SELECT MSSAGE_NO, CHAT_ROOM_NO, EMP_NO, ATCHMNFL_NO, MSSAGE_CN, MSSAGE_DATE
		FROM MESSAGE 
		WHERE TO_NUMBER(MSSAGE_NO) = (SELECT MAX(TO_NUMBER(MSSAGE_NO)) FROM MESSAGE WHERE CHAT_ROOM_NO = #{chatRoomNo})
		AND CHAT_ROOM_NO = #{chatRoomNo}
	</select>
	
	<select id="getEmpList" parameterType="hashMap" resultType="empVO">
		SELECT E.EMP_NO, E.DEPT_NO, E.EMP_NM, E.POSITION_CD, D.DEPT_NM,C.CMMN_CD_NM AS POSITION
		FROM EMPLOYEE E,COMMON_CODE C, DEPARTMENT D
		WHERE (E.EMP_NO LIKE '%${param}%' OR E.EMP_NM LIKE '%${param}%')
		AND E.DEPT_NO = D.DEPT_NO
		AND E.POSITION_CD = C.CMMN_CD
		AND C.CMMN_CD_GROUP = 'EMP002'
	</select>
	
	<select id="getChatRoomNo" resultType="String">
		SELECT CHATROOM_SEQ.NEXTVAL
		FROM DUAL
	</select>
	
	<insert id="addNewChatRoom" parameterType="String">
		INSERT INTO CHAT_ROOM(CHAT_ROOM_NO, CHAT_ROOM_NM)
		VALUES(#{chatRoomNo},#{chatRoomNm})
	</insert>
	
	<insert id="addNewChatRoomEmp" parameterType="String">
		INSERT INTO CHATROOM_EMPLOYEE(CHAT_ROOM_NO, EMP_NO)
		VALUES(#{chatRoomNo},#{empNo})
	</insert>
	
	<select id="getChatRoomEmp" parameterType="hashMap" resultType="chatRoomEmployeeVO">
		SELECT CE.CHAT_ROOM_NO, CE.EMP_NO, E.EMP_NM, E.PROFL_IMAGE_URL, D.DEPT_NM
		FROM CHATROOM_EMPLOYEE CE, EMPLOYEE E, DEPARTMENT D
		WHERE CE.CHAT_ROOM_NO = #{chatRoomNo}
		AND CE.EMP_NO = E.EMP_NO
		AND E.DEPT_NO = D.DEPT_NO
	</select>
	
	<update id="modChatRoomNm" parameterType="hashMap">
		UPDATE CHAT_ROOM
		SET
		CHAT_ROOM_NM = #{newChatRoomNm}
		WHERE CHAT_ROOM_NO = #{chatRoomNo}
	</update>
	
	<update id="modChatEmpDate" parameterType="hashMap">
		UPDATE CHATROOM_EMPLOYEE
		SET
		LAST_DATE = SYSDATE
		WHERE CHAT_ROOM_NO = #{chatRoomNo}
		AND EMP_NO = #{empNo}
	</update>
	
	<delete id="deleteChatRoom" parameterType="hashMap">
		DELETE CHATROOM_EMPLOYEE
		WHERE EMP_NO = #{empNo}
		AND CHAT_ROOM_NO = #{chatRoomNo}
	</delete>
	
</mapper>