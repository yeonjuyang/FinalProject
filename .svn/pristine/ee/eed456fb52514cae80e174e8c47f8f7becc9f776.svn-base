package com.team1.workforest.admin.reservation.service.impl;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.team1.workforest.admin.reservation.mapper.AdminResourcesMapper;
import com.team1.workforest.admin.reservation.service.AdminResourcesService;
import com.team1.workforest.reservation.car.vo.CarVO;
import com.team1.workforest.reservation.meetingroom.vo.MtrEquipmentVO;
import com.team1.workforest.reservation.meetingroom.vo.MtrVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class AdminResourcesServiceImpl implements AdminResourcesService{
		
	@Autowired
	AdminResourcesMapper adminResourcesMapper;
	
	@Override
	public List<MtrVO> getMtrList() {
		return adminResourcesMapper.getMtrList();
	}
	
	@Override
	public int createMtr(MtrVO mtrVO) {
		String uploadFolder = "C:\\FinalProject\\sts3915\\workspace_finalproject\\WorkForest\\src\\main\\webapp\\resources\\img";

		String childFolderName = "reservation";

		// 저장 폴더 지정
		File uploadPath = new File(uploadFolder, childFolderName);

		// 폴더가 없으면 생성
		if (!uploadPath.exists()) {
			uploadPath.mkdirs();
		}

		String uploadFileName = "";

		MultipartFile uploadFile = mtrVO.getUploadFile();
		uploadFileName = uploadFile.getOriginalFilename();

		UUID uuid = UUID.randomUUID();
		uploadFileName = uuid.toString() + "_" + uploadFileName;

		// 파일 복사경로 설정
		File saveFile = new File(uploadFolder + "\\" + childFolderName,uploadFileName);

		try {
			uploadFile.transferTo(saveFile);
		} catch (IllegalStateException e) {
			log.error(e.getMessage());
		} catch (IOException e) {
			log.error(e.getMessage());
		}

		mtrVO.setPhotoUrl("/" + childFolderName + "/" + uploadFileName);

		int result = adminResourcesMapper.createMtr(mtrVO);

		// 장비 테이블에 insert
		List<MtrEquipmentVO> mtrEquipmentList = new ArrayList<MtrEquipmentVO>();

		String[] equipments = mtrVO.getEquipments();
		List<String> equipmentList = Arrays.asList(equipments);

		for (int i = 1; i <= 4; i++) {
			MtrEquipmentVO mtrEquipmentVO = new MtrEquipmentVO();
			mtrEquipmentVO.setMtrNo(mtrVO.getMtrNo());
			mtrEquipmentVO.setEqpmnNo(String.valueOf(i));

			if (equipmentList.contains(String.valueOf(i))) {
				mtrEquipmentVO.setEquipYnCd("1");

			} else {
				mtrEquipmentVO.setEquipYnCd("0");

			}

			result += adminResourcesMapper.createMtrEquipment(mtrEquipmentVO);
		}
		
		return result;
	}

	@Override
	public int updateMtr(MtrVO mtrVO) {
		return adminResourcesMapper.updateMtr(mtrVO);
	}

	@Override
	public int deleteMtr(String mtrNo) {
		return adminResourcesMapper.deleteMtr(mtrNo);
	}

	@Override
	public List<CarVO> getCarList() {
		return adminResourcesMapper.getCarList();
	}

	@Override
	public int createCar(CarVO carVO) {
		String uploadFolder = "C:\\FinalProject\\sts3915\\workspace_finalproject\\WorkForest\\src\\main\\webapp\\resources\\img";

		String childFolderName = "reservation";

		// 저장 폴더 지정
		File uploadPath = new File(uploadFolder, childFolderName);

		// 폴더가 없으면 생성
		if (!uploadPath.exists()) {
			uploadPath.mkdirs();
		}

		String uploadFileName = "";
		MultipartFile uploadFile = carVO.getUploadFile();
		uploadFileName = uploadFile.getOriginalFilename();

		UUID uuid = UUID.randomUUID();
		uploadFileName = uuid.toString() + "_" + uploadFileName;

		// 파일 복사경로 설정
		File saveFile = new File(uploadFolder + "\\" + childFolderName,uploadFileName);
		log.info("savefile : "+saveFile);

		try {
			uploadFile.transferTo(saveFile);
		} catch (IllegalStateException e) {
			log.error(e.getMessage());
		} catch (IOException e) {
			log.error(e.getMessage());
		}

		carVO.setPhotoUrl("/" + childFolderName + "/" + uploadFileName);

		int result = adminResourcesMapper.createCar(carVO);
	
		return result;
	}

	@Override
	public int updateCar(CarVO carVO) {
		return adminResourcesMapper.updateCar(carVO);
	}

	@Override
	public int deleteCar(String carNo) {
		return adminResourcesMapper.deleteCar(carNo);
	}

	@Override
	public String createMtrNo() {
		return adminResourcesMapper.createMtrNo();
	}

}
