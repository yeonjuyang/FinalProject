/**
 *
 */
$(document).ready(function () {
    // 상세 모달 닫으면 팀원 이름 박스 안보이게
    $("#dModalCloseBtn").on("click", function () {
        $("#schEmpNameBox").css("display", "none");
    });

    // 일정 수정 취소 버튼 누르면 상세 모달 표시
    $("#updateCancelBtn").on("click", function () {
        // 수정 모달 닫기
        $("#schModal").removeClass("open");

        $("#createBtnGroup").css("display", "block");
        $("#updateBtnGroup").css("display", "none");

        $("#schModal").addClass("open");
    });

    // 일정 수정 모달 불러오기
    function showUpdateModal(event) {
        console.log("Event clicked:", event);

        /* let fommatedStartDate = formatDateAndTime(info.event._instance.range.start);
        let fommatedEndDate = formatDateAndTime(info.event._instance.range.end); 
        $("#schCtgr").val(schType);
        $("#modalTit").val("일정수정");
        $("#schName").val(info.event._def.title);

        $("#schSDateandTime").val(fommatedStartDate);
        $("#schEDateandTime").val(fommatedEndDate);

        $("#schLoc").val(info.event._def.extendedProps.location);
        $("#schCont").val(info.event._def.extendedProps.content);
        $("#createBtnGroup").css("display", "none");
        $("#updateBtnGroup").css("display", "block");
        $("#schModal").addClass("open"); */
    }

    // 일정 상세 모달 불러오기
    function showEventDetails(info) {
        console.log("Event clicked:", info.event);
        let schTypeColor = info.event._def.ui.backgroundColor;
        console.log(schTypeColor);
        let schType = "";
        if (schTypeColor == "yellow") {
            schType = "내 일정";
        } else if (schTypeColor == "green") {
            schType = "팀 일정";
            schSeCd = info.event._def.extendedProps.schSeCd;
            console.log(schSeCd);
            if (schSeCd == 1) {
                $("#schEmpName").val(info.event._def.extendedProps.empNo);
                $("#schEmpNameBox").css("display", "block");
            }
        } else if (schTypeColor == "red") {
            schType = "본부 일정";
        } else {
            schType = "회사 일정";
        }

        let fommatedStartDate = formatDateAndTime(info.event._instance.range.start);
        let fommatedEndDate = formatDateAndTime(info.event._instance.range.end);
        $("#schCtgr").val(schType);
        $("#schDName").val(info.event._def.title);
        $("#schSDateandTime").val(fommatedStartDate);
        $("#schEDateandTime").val(fommatedEndDate);
        $("#schDLoc").val(info.event._def.extendedProps.location);
        $("#schDCont").val(info.event._def.extendedProps.content);
        $("#schDetailModal").addClass("open");

        let saveEvent = new Array(); //
        let obj = new Object();
        obj.schCtgr = schType;
        obj.schDName = info.event._instance.range.start;
        obj.schSdate = fommatedStartDate;
        obj.schEDate = fommatedEndDate;
        obj.schDLoc = info.event._def.extendedProps.location;
        obj.schDCont = info.event._def.extendedProps.content;
        saveEvent.push(obj);

        // 일정 수정 버튼 누르면 수정 모달 표시
        $("#updateBtn").on("click", function () {
            $("#schDetailModal").removeClass("open");
            showUpdateModal(saveEvent);
        });
    }

    // 캘린더 이벤트 생성 종료일 포맷
    function formatEDate(dateString) {
        let date = new Date(dateString);

        date.setDate(date.getDate() - 1);

        let year = date.getFullYear();
        let month = String(date.getMonth() + 1).padStart(2, "0");
        let day = String(date.getDate()).padStart(2, "0");

        return `${year}-${month}-${day}`;
    }

    // 시작일시, 종료일시 포맷
    function formatDateAndTime(dateString) {
        const date = new Date(dateString);

        // 미국 시간이랑 맞추기
        date.setHours(date.getHours() - 9);

        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, "0");
        const day = String(date.getDate()).padStart(2, "0");
        const hours = String(date.getHours()).padStart(2, "0");
        const minutes = String(date.getMinutes()).padStart(2, "0");

        return `${year}-${month}-${day} ${hours}:${minutes}`;
    }

    // 일정 추가 모달에서 종일버튼 클릭에 따라 시간선택 활성화 변경
    $("#allDay").on("change", function () {
        if ($(this).is(":checked")) {
            $("#schSTime").prop("disabled", true);
            $("#schETime").prop("disabled", true);
        } else {
            $("#schSTime").prop("disabled", false);
            $("#schETime").prop("disabled", false);
        }
    });

    // 일정 등록(추가) 버튼 클릭하면 모달 표시
    $("#schCreateBtn").on("click", function () {
        $("#schModal").addClass("open");
    });

    // 캘린더에 표시할 일정 불러오기
    function getSchedule() {
        let chkSchs = [];
        // 체크된 체크박스의 값을 배열에 추가
        $(".schChk:checked").each(function () {
            chkSchs.push(this.id);
            console.log("check :", chkSchs);
        });

        // 배열을 쿼리 문자열로 변환
        let queryString = chkSchs.map(function (id) {
            return "chkSchs=" + encodeURIComponent(id);
        });

        return $.ajax({
            url: "/api/schedules?" + queryString.join("&"),
            method: "GET",
            contentType: "application/json",
            dataType: "json",
        }).done(function (data) {
            data.forEach(function (item) {
                if (item.schType == "mySch") {
                    item.backgroundColor = "#32b677";
                } else if (item.schType == "teamSch") {
                    item.backgroundColor = "#029be6";
                } else if (item.schType == "deptSch") {
                    item.backgroundColor = "#7987ca";
                } else {
                    item.backgroundColor = "#f5521c";
                }
            });
        });
    }

    // 체크박스 선택이 변경되면 일정 다시 불러오기
    $(".schChk").change(function () {
        getSchedule().done(function (data) {
            calendar.removeAllEvents(); // 기존 이벤트 제거
            calendar.addEventSource(data); // 새로운 이벤트 추가
            calendar.refetchEvents(); // 이벤트 다시 로드
        });
    });

    /* 일정 불러오고 난 후 실행 */
    getSchedule().done(function (data) {
        console.log(data); // log로 데이터 찍어주기
        let calendarEl = document.getElementById("calendar");
        calendar = new FullCalendar.Calendar(calendarEl, {
            height: "700px",
            slotMinTime: "08:00", // Day 캘린더에서 시작 시간
            slotMaxTime: "22:00", // Day 캘린더에서 종료 시간
            // 헤더에 표시할 툴바
            headerToolbar: {
                left: "prev next today",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay,listWeek",
            },
            initialView: "dayGridMonth", // 초기 로드 될 때 보이는 캘린더 화면 (기본 설정 : 달)
            navLinks: true, // 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
            editable: true, // 수정 가능?
            selectable: true, // 달력 일자 드래그 설정 가능
            droppable: true, // 드래그 앤 드롭
            events: data,
            locale: "ko", // 한국어 설정

            // 일정 클릭하면 일정 상세 모달 표시
            eventClick: function (info, jsEvent, view) {
                showEventDetails(info);
            },

            // 캘린더에서 드래그로 이벤트를 생성
            select: function (info) {
                console.log(info);
                document.getElementById("schSDate").value = info.startStr;
                document.getElementById("schEDate").value = formatEDate(info.end);
                document.getElementById("schModal").classList.add("open");

                /* if (title) {
                    calendar.addEvent({
                        title: title,
                        start: arg.start,
                        end: arg.end,
                        allDay: arg.allDay,
                    });
                } else {
                    location.reload(); // 새로고침
                    return;
                }
                var events = new Array(); // Json 데이터를 받기 위한 배열 선언
                var obj = new Object(); // Json을 담기 위해 Object 선언
                obj.title = title;
                obj.start = arg.start; // 시작
                obj.end = arg.end; // 끝
                events.push(obj);
                var jsondata = JSON.stringify(events);
                console.log(jsondata);
                $(function createSchedule(jsonData) {
                    $.ajax({
                        url: "/schedule",
                        method: "POST",
                        dataType: "json",
                        data: JSON.stringify(events),
                        contentType: "application/json",
                    });
                    calendar.unselect();
                }); */
            },

            // 드래그로 이벤트 수정
            /* eventDrop: function (info) {
                if (confirm("'" + info.event.title + "'을 수정하시겠습니까?")) {
                    var events = new Array(); // Json 데이터를 받기 위한 배열 선언
                    var obj = new Object();
                    obj.title = info.event._def.title;
                    obj.start = info.event._instance.range.start;
                    obj.end = info.event._instance.range.end;
                    obj.oldTitle = info.oldEvent._def.title;
                    obj.oldStart = info.oldEvent._instance.range.start;
                    obj.oldEnd = info.oldEvent._instance.range.end;
                    events.push(obj);
                    console.log(events);
                } else {
                    location.reload(); // 새로 고침
                }
                $(function updateSchedule() {
                    $.ajax({
                        url: "/schedule",
                        method: "PUT",
                        dataType: "json",
                        data: JSON.stringify(events),
                        contentType: "application/json",
                    });
                });
            }, */

            /* eventResize: function (info) {
                console.log(info);
                if (confirm("'" + info.event.title + "'을 변경하시겠습니까?'")) {
                    var events = new Array(); // JSON 데이터를 받기 위한 배열
                    var obj = new Object();
                    obj.title = info.event._def.title;
                    obj.start = info.event._instance.range.start;
                    obj.end = info.event._instance.range.end;
                    obj.oldTitle = info.oldEvent._def.title;
                    obj.oldStart = info.oldEvent._instance.range.start;
                    obj.oldEnd = info.oldEvent._instance.range.end;
                    events.push(obj);
                    console.log(events);
                } else {
                    location.reload(); // 새로고침
                }
                $(function updateSchedule() {
                    $.ajax({
                        url: "/schedule",
                        method: "PUT",
                        dataType: "json",
                        data: JSON.stringify(events),
                        contentType: "application/json",
                    });
                });
            }, */

            // 이벤트 선택해서 삭제하기
            /* eventClick: function (info) {
                if (confirm("'" + info.event.title + "'을 삭제하시겠습니까?")) {
                    // 확인 클릭 시
                    info.event.remove();
                }
                console.log(info.event);
                var events = new Array(); // JSON 데이터를 받기 위한 배열 선언
                var obj = new Object();
                obj.title = info.event._def.title;
                obj.start = info.event._instance.range.start;
                events.push(obj);
                console.log(events);
                $(function deleteSchedule() {
                    $.ajax({
                        url: "/schedule",
                        method: "DELETE",
                        dataType: "json",
                        data: JSON.stringify(events),
                        contentType: "application/json;charset=utf-8",
                    });
                });
            }, */
        });
        calendar.render();
    });
});
