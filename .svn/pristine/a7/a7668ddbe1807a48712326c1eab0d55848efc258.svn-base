package com.team1.workforest.employee.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import com.team1.workforest.employee.service.EmployeeService;
import com.team1.workforest.employee.vo.EmployeeVO;
import com.team1.workforest.util.ArticlePage;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/emp")
public class EmpController {
	
	@Autowired
	EmployeeService empService;
	
	//비밀번호 암호화 의존성 주입
	@Autowired
	BCryptPasswordEncoder passwordEncoder;
	
	
	//사원리스트
//	@GetMapping("/list")
//	public String list(){
//		return "emp/list";
//	}
//		
	//사원리스트
//	@ResponseBody
//	@PostMapping("/listAjax")
//	public List<EmployeeVO> listAjax() {
//		List<EmployeeVO> empVOList= this.empService.list();
//		log.info("empVOList: {}", empVOList);
//		return empVOList;
//	}
	
	@GetMapping("/list")
	   public String getFreeBrdList (Model model,
	               @RequestParam(value="currentPage", required = false, defaultValue = "1") int currentPage) {
	      
	      Map<String, Object> map = new HashMap<String,Object>();
	      
	      // 페이지 번호
	      map.put("currentPage", currentPage);   
	      
	      //전체 행의 수 (total)
	      int total = this.empService.getTotal();
	      log.info("total -> ",total);
	      
	      // 한 화면에 보여지는 행의 수 (기본 10행)
	      int size = 10;
	      
	      
	      List<EmployeeVO>empVOList = this.empService.list(map);
	      log.info("list -> freeBoardVO : "+empVOList);
	      
	      model.addAttribute("data",new ArticlePage<EmployeeVO>(total, currentPage, size, empVOList, null));
	      
	      return "emp/list";
	   }
	
	

	//사원 정보(내 정보)
	@GetMapping("/detail")
	public String detail( @RequestParam("empNo") String empNo, Model model) {
	
	    EmployeeVO empVO= this.empService.detail(empNo);
		model.addAttribute("empVO", empVO);
		log.info("empVO: {}", empVO);
		
		//forwarding
		return "emp/empDetail";
	}
	
	//내 정보 수정
	@ResponseBody
	@PostMapping("/modDetail")
	public int modDetail(@RequestBody EmployeeVO empVO) {
	
		log.info("modDetail->empVO : " + empVO);
		
		int result= this.empService.modDetail(empVO);
		log.info("modDetail : " + result);		
		
		return result;
	}

}
