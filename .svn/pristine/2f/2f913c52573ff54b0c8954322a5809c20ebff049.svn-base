let _selectedBkmkNo; // 선택된 즐겨찾기
let _selectedDetail; // 선택된 상세

const _apvSeCds = []; // 구분코드
let _emp = [];
$(function () {

	// 구분코드 목록 조회
    getCommonCode();
		
	// 결재 라인 모달 활성화
	$('#apv_modal_btn').on('click', openApprovalModal);

    // 즐겨찾기 저장 이벤트
    $('#create_bkmk_btn').on('click', createBkmk);

    // 즐겨찾기 상세 조회 이벤트
    $(document).on('click', '.bookmark-list>li', function () {

        let bkmkNo = $(this).data('bkmkNo');
        _selectedBkmkNo = $(this).data('bkmkNo');

        $(this).addClass('active').siblings('li').removeClass('active');

        getBkmkDetail(bkmkNo);

    });

    // 즐겨찾기 삭제 이벤트
    $(document).on('click', 'ul.bookmark-list .delete-btn', function () {

        let bkmkNo = $(this).parent().parent('li').data('bkmkNo'); // 삭제할 번호

        deleteBkmk(bkmkNo);
    });

    // 즐겨찾기명 수정 버튼 클릭 이벤트
    $(document).on('click', 'ul.bookmark-list .modify-btn', function () {
        let modifyBtn = $(this);
        let parentLi = modifyBtn.closest('li');
        let bkmkNmInput = parentLi.find('.update-input');
        //let bkmkNm = parentLi.find('.update-input').val(); // 수정할 즐겨찾기명

        // 수정버튼 안보이게, 저장버튼 보이게
        modifyBtn.css({ 'position': 'absolute', 'left': '-99999999999px' });
        modifyBtn.siblings('.save-btn').css({ 'position': 'static' });

        // 즐겨찾기명 변경 함수 호출
        updateBkmkNm(bkmkNmInput, modifyBtn);
    });

    // 저장 버튼 클릭시 즐겨찾기 결재라인을 문서에 불러오기
    $('#apvline_save_btn').on('click', function () {
        
        // 모달 닫기
        $('#apvLine_modal').removeClass('open');
        $('html').removeClass('scroll-hidden');

        // 결재라인 문서 화면에 띄우기
        showApvLine();
    });
});

// 구분코드 조회
function getCommonCode(){
	$.ajax({
        url: '/approval/getCommonCode',
        type: 'get',
        success: (result) => {
        
            result.forEach((e)=>{
            	_apvSeCds.push(e);
            });
            
            console.log("_apvSeCds : ", _apvSeCds);
        }
	});
}

// 결재라인 모달 활성화
function openApprovalModal() {
    // 모달 활성화
    $('#apvLine_modal').addClass('open');
    $('html').addClass('scroll-hidden');
    
    // 즐겨찾기 목록 조회
    getBkmkList();
    
	// 부서 조직도
    getEmpList();
}

// 직원 목록 조회
function getEmpList() {
	$.ajax({
        url: '/approval/getEmpList',
        type: 'get',
        success: (result) => {
        	if(Array.isArray(result)) {
        		
        		_emp = result.reduce((acc, e) => {
        			
        			let state = {
				    	opened    : true,
				      	disabled  : false,
				      	selected  : false
				    }
        			
        		
				    // 부서
				    if(!acc.tmpDeptNoList.includes(e.DEPT_NO)) {
				        acc.arr.push({
				            id: e.DEPT_NO,
				            text: e.DEPT_NM,
				            parent: e.UPPER_DEPT || '#',
				            state: state,
				            type: 'dept',
			        	});
				        acc.tmpDeptNoList.push(e.DEPT_NO)
				    }
				    
				    
				    // 직원 
				    acc.arr.push(
					    Object.assign({
					        id: e.EMP_NO,
					        text: `${e.EMP_NM} ${e.POSITION_NM}`,
					        parent: e.DEPT_NO,
					        state: state,
					        type: 'emp',
					    }, e)
				    );
				    
				    return acc;
				}, {
				    arr: [],
				    tmpDeptNoList: [],
				}).arr;
				
				$('#container').jstree({
			        core: {
			            data: _emp,
			            multiple: true,
			            animation: 100
			        },
			        checkbox: {
			            keep_selected_style : false
			        },
			        //types: {
			        //	emp: {
			        //		icon: 'ki-outline ki-older text-warning'
			        //	},
			        //	dept: {
			        //		icon: 'ki-outline ki-file  text-warning'
			        //	},
			        //},
			        plugins: [
			        	'types',
			            'wholerow',
			            'checkbox'
			        ],
			    })
			    .on('changed.jstree', selectEmp);
			    //.on('select_node.jstree', selectEmp);
						
        	}
        }
	});
	
}

function selectEmp(event, e) {
	let selectedEmp = _emp.filter((emp) => e.selected.includes(emp.EMP_NO));
	console.log(selectedEmp);
}

// 즐겨찾기 저장
function createBkmk() {

	// ### 임시데이터 ###
    var sample = [
        { empNo: '2020001', apvSeCd: '1' }, // 기안 apvEmpNo
        { empNo: '2020002', apvSeCd: '2' }, // 검토 
        { empNo: '2020003', apvSeCd: '3' }  // 결재
    ]

    $.ajax({
        url: '/approval/createBkmk',
        type: 'post',
        data: JSON.stringify({
            bkmkNm: '즐겨찾기',
            bkmkDetail: sample
        }),
        contentType: "application/json;charset=utf-8",
        success: (result) => {
            console.log('result : ', result);
            alert(_msg.common.saveSuccessAlert);

            // 즐겨찾기 목록
            getBkmkList();
        }
    });
}

// 즐겨찾기 목록 조회
function getBkmkList() {
    $.ajax({
        url: '/approval/getBkmkList',
        type: 'get',
        success: (result) => {
            console.log('result : ', result);
			let bkmkList = $('ul.bookmark-list');
			bkmkList.empty();
			
            result.forEach((e) => {

                let HTML = `
					<li data-bkmk-no=${e.bkmkNo}>
						<input type="text" class="update-input" placeholder="변경할 즐겨찾기명" value="${e.bkmkNm}" readonly>
	                    <div class="button-wrap">
	                    	<button type="button" class="modify-btn"></button>
	                    	<button type="button" class="save-btn" style="position:absolute; left:-99999999999px;"></button>
	                    	<button type="button" class="delete-btn"></button>
	                    </div>
	                </li>
				`;
				bkmkList.append(HTML);
            });
        }
    });
}

// 즐겨찾기 상세 조회하여 상위창 결재라인 화면에 표시하기
function getBkmkDetail(bkmkNo) {

    console.log('this bkmkNo : ', bkmkNo);
	let apvUl = $('#apvLine_modal ul.approval-add-user');
    apvUl.empty();

    $.ajax({
        url: '/approval/getBkmkDetail?bkmkNo=' + bkmkNo,
        type: 'get',
        success: (result) => {
            console.log('result : ', result);
			_selectedDetail = result;
			
            result.forEach(function (e) {
                let apvSeCdText;
                
				let HTML = `
					<li>
					    <div class="user">
					        <span class="dept">${e.deptNm}</span>
					        <span>${e.empNm}</span>
					        <span>${e.cmmnCdNm}</span>
					    </div>
					    <div class="wf-select-group">
					        <select>
					        </select>
					    </div>
					</li>
				`;
				
				HTML = $(HTML).find('select').append(
					_apvSeCds.map((e2) => {
					return `
						<option value="${e2.cmmnCd}" ${e.apvSeCd == e2.cmmnCd ? 'selected' : ''}>
						${e2.cmmnCdNm}</option>`
					})
				).end();
				
                apvUl.append(HTML);
            });
        }
    });
}

// 즐겨찾기 삭제
function deleteBkmk(bkmkNo) {
    $.ajax({
        url: '/approval/deleteBkmk',
        type: 'delete',
        data: JSON.stringify(bkmkNo),
        dataType: 'text',
        success: (result) => {
            console.log("result : ", result);
            if (result > 0) {
                alert(_msg.common.deleteSuccessAlert);

                //$(`li[data-bkmk-no="${bkmkNo}"]`).remove();
				getBkmkList();
            } else {
                alert(_msg.common.deleteFailAlert);
            }
        }
    });
}

// 즐겨찾기명 수정
function updateBkmkNm(bkmkNmInput, modifyBtn) {

    bkmkNmInput.prop('readonly', false);

    const bkmkNo = modifyBtn.parent().parent('li').data('bkmkNo');
    console.log("수정할 bkmkNo : ", bkmkNo);
    const updateInput = modifyBtn.parent().siblings($('.update-input'));
    const saveBtn = modifyBtn.siblings('.save-btn');

    saveBtn.click(function () {
        const newName = updateInput.val().trim(); // 새 즐겨찾기명

        // 입력하지 않았을 때
        if (!newName) {
            alert(_msg.approval.fillEmptyFieldsAlert);
            updateInput.css('border', '1px solid #00a287');
        }

        // 입력했을 때
        else {
            updateInput.val(newName); // 변경된 즐겨찾기명으로
            updateInput.prop('readonly', true);

            updateBkmk(bkmkNo, newName);

            // 저장버튼 안보이게, 수정버튼 보이게
            saveBtn.css({ 'position': 'absolute', 'left': '-99999999999px' });
            modifyBtn.css({ 'position': 'static' });            
        }
    });
}

// 즐겨찾기명 수정 요청
function updateBkmk(bkmkNo, newName) {

    let data = {
        bkmkNo: bkmkNo,
        bkmkNm: newName
    }

    console.log("data : ", data);

    $.ajax({
        url: '/approval/updateBkmk',
        type: 'put',
        data: JSON.stringify(data),
        dataType: 'text',
        success: (result) => {
            console.log("result : ", result);
            if (result > 0) {
                alert(_msg.common.updateSuccessAlert);
                getBkmkList();
            } else {
                alert(_msg.common.updateFailAlert);
            }
        }
    });
}

// 결재라인 문서 화면에 띄우기
function showApvLine(){
	
	let apvLine1 = $('#apv_line1');
	
	// no-data 화면 지우기
	apvLine1.removeClass('no-data');
	
	// 기존 내용 지우기
	apvLine1.empty();
	
	_selectedDetail.forEach((e) => {
		
		let apvSeCdText;
		let classNum;
		switch (e.apvSeCd) {
			case "0":
			    apvSeCdText = "기안";
				classNum = 1;				
			    break;
			case "1":
			    apvSeCdText = "검토";
			    classNum = 2;
			    break;
			case "2":
			    apvSeCdText = "결재";
			    classNum = 3;
			    break;
		}
		
		let HTML = `
			<li>
                <div class="user">
                	<span class="dept">${e.deptNm}</span>
                    <span>${e.empNm}</span>
                    <span>${e.cmmnCdNm}</span>
                </div>
                <span class="approval-status${classNum}">${apvSeCdText}</span>
            </li>
		`;
		
		apvLine1.append(HTML);
	});
}