package com.team1.workforest.mail.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.team1.workforest.mail.service.MailService;
import com.team1.workforest.mail.vo.EmailVO;
import com.team1.workforest.util.ArticlePage;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/mail")
public class MailController {
	
	@Autowired
	MailService mailService;
	
	//메일 메인화면 (모든 메일 출력)
	@GetMapping("/main")
	public String getMainList() {
		return "mail/main";
	}
	
	//받은메일함
	@GetMapping("/inbox")
	public String getMailList(@RequestParam(required = false) Map<String, Object> map,
			@RequestParam(required = false) String currentPage,
			@RequestParam(required = false) String keyword) {
		
		//forwarding : jsp
		return "mail/inbox";
	}

	//메일 상세보기
	@GetMapping("/detail")
	public String getMailDetail() {
		return "mail/detail";
	}
	
	//메일 쓰기
	@GetMapping("/create")
	public String createMail() {
		return "mail/create";
	}
	
	//보낸메일함
	@GetMapping("/sendbox")
	public String getSendList() {
		return "mail/sendbox";
	}
	
	//첨부파일메일함
	@GetMapping("/attachbox")
	public String getAttachList() {
		return "mail/sendbox";
	}
	
	//휴지통
	@GetMapping("/deletebox")
	public String deleteMail() {
		return "mail/delete";
	}
	
	
	
	
	
	@ResponseBody
	@GetMapping("/inboxAjax")
	public ArticlePage<EmailVO> inboxAjax(
			@RequestParam(required = false) Map<String, Object> map,
			@RequestParam(required = false) String currentPage,
			@RequestParam(required = false) String keyword){
		map.put("empNo", "2019007");
		log.info("map : " + map);
		List<EmailVO> emailVOList = this.mailService.getMailList(map);
		log.info("list->emailVOList : " + emailVOList);		
		
		int total = this.mailService.getTotal(map);
		log.info("list->total : " + total);
		int size = 5;
		
		currentPage = (map.get("currentPage") != null) ? map.get("currentPage").toString() : "";
		
		//keyword가 null이면 빈 문자열로 초기화
		keyword = (map.get("keyword") != null) ? map.get("keyword").toString() : "";
		log.info("listAjax->keyword : " + keyword);
		
		ArticlePage<EmailVO> data = new ArticlePage<EmailVO>(total,
				currentPage.isEmpty() ? 1 : Integer.parseInt(currentPage), size, emailVOList, keyword);
		
		String url = "/mail/inbox";
		data.setUrl(url);
		
		
		return data;
	}

	
}
