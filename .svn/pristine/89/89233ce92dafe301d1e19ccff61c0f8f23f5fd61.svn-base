package com.team1.workforest.approval.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.team1.workforest.approval.service.impl.ApprovalService;
import com.team1.workforest.approval.vo.ApvBkmkVO;
import com.team1.workforest.approval.vo.ApvLineBkmkVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/approval")
public class ApprovalController {
	
	@Autowired 
	ApprovalService approvalService;
	
	// 결재 메인 VIEW
	@GetMapping("/mainView")
	public String mainView() {
		return "approval/main";
	}
	
	// 결재 등록 VIEW
	@GetMapping("/createView")
	public String createView() {
		return "approval/create";
	}
	
//	public String create(@RequestPart(value="file", required=false) MultipartFile file,
//						 @RequestPart("data") Map<String, Object> map) {
//		log.info("file : ", file);
//		log.info("map : ", map);
//		return "OK";
//	}
	// 결재 등록
	@ResponseBody
	@PostMapping("/create")
	public int create(@RequestBody Map<String, Object> map) {
		log.info("map : {}", map);
		
		int result = this.approvalService.create(map);
		
		return result;
	}
	
	// 결재 수정 VIEW
	@GetMapping("/updateView")
	public String updateView() {
		return "approval/update";
	}
	
	// 결재 수정
	@PutMapping("/update")
	public String update() {
		return "OK";
	}
	
	// 결재 상세 VIEW
	@GetMapping("/approvalDetailView")
	public String approvalDetailView(Map<String, Object> userInfo) {
		
//		userInfo {apv_no, emp_no} 결재번호, 작성자사번
//		Map<String, Object> approvalMap = this.approvalService.approvalDetailView();
		
		return "approval/detail";
	}
	
	// 즐겨찾기 저장
	@ResponseBody
	@PostMapping("/createBkmk")
	public int createBkmk(@RequestBody Map<String, Object> bkmkMap) {
		int result = approvalService.createBkmk(bkmkMap);
		return result;
	}	
	
	// 즐겨찾기 목록 조회
	@ResponseBody
	@GetMapping("/getBkmkList")
	public List<ApvBkmkVO> getBkmkList() {
		List<ApvBkmkVO> getBkmkList = approvalService.getBkmkList();
		return getBkmkList;
	}
	
	// 즐겨찾기 상세 조회
	@ResponseBody
	@GetMapping("/getBkmkDetail")
	public List<ApvBkmkVO> getBkmkDetail(@RequestParam int bkmkNo) {
		List<ApvBkmkVO> apvBkmkDetail = approvalService.getBkmkDetail(bkmkNo);
		return apvBkmkDetail;
	}
	
	// 즐겨찾기 삭제
	@ResponseBody
	@DeleteMapping("/deleteBkmk")
	public int deleteBkmk(@RequestBody int bkmkNo) {
		int result = approvalService.deleteBkmk(bkmkNo);
		return result;
	}
	
	// 즐겨찾기 수정
	@ResponseBody
	@PutMapping("/updateBkmk")
	public int updateBkmk(@RequestBody ApvLineBkmkVO bkmkVO) {
		int result = approvalService.updateBkmk(bkmkVO);
		return result;
	}
	
	// 직원 목록 조회
	@GetMapping("/getEmpList")
	public String getEmpList() {
		return null;
	}	

	// 내 문서함 VIEW
	@GetMapping("/listView")
	public String listView() {
		return "approval/myList";
	}
	
	// 임시저장문서 삭제
	@DeleteMapping("/deleteTemp")
	public String deleteTemp() {
		return "OK";
	}
	
	// 부서 문서함 VIEW
	@GetMapping("/deptListView")
	public String deptListView() {
		return "approval/deptList";
	}
	
	// 참조 문서함 VIEW
	@GetMapping("/referListView")
	public String referListView() {
		return "approval/referList";
	}
	
	// 반려
	@ResponseBody
	@PostMapping("/refuse")
	public String refuse() {
		return "OK";
	}
	
	// 결재(승인)
	@ResponseBody
	@PostMapping("/approval")
	public String approval() {
		return "OK";
	}
	
	// 회수
	@ResponseBody
	@PostMapping("/docReturn")
	public String docReturn() {
		return "OK";
	}

}
