<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.workforest.mail.mapper.EmailMapper">
    
<!--     <sql id="currentPageList"> -->
<!-- 	    WITH T AS ( -->
<!-- 	    SELECT -->
<!-- 	        ROWNUM RNUM, -->
<!-- 	        E.EMAIL_NO, -->
<!-- 	        E.SENDER_EMPL_NO, -->
<!-- 	        EM.EMP_NM, -->
<!-- 	        E.EMAIL_SJ, -->
<!-- 	        E.SEND_DATE, -->
<!-- 	        ER.CNFIRM_DATE, -->
<!-- 	        E.ATCHMNFL_NO, -->
<!-- 	        EM.EMAIL AS SENDER_EMAIL -->
<!-- 	    FROM -->
<!-- 	        EMAIL E -->
<!-- 	    JOIN -->
<!-- 	        EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO -->
<!-- 	    JOIN -->
<!-- 	        EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO -->
<!-- 	    WHERE -->
<!-- 	        ER.EMP_NO = #{empNo} -->
<!-- 		) -->
<!-- 		SELECT * FROM T -->
<!-- 		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10) -->
<!-- 		ORDER BY RNUM -->
<!--     </sql> -->
    
<!--     <sql id="list"> -->
<!--         SELECT  -->
<!--             E.SENDER_EMPL_NO, -->
<!--             E.EMAIL_SJ, -->
<!--             E.SEND_DATE, -->
<!--             ER.CNFIRM_DATE, -->
<!--             E.ATCHMNFL_NO, -->
<!--             EM.EMP_NM, -->
<!--             EM.EMAIL AS SENDER_EMAIL -->
<!--         FROM  -->
<!--             EMAIL E -->
<!--         JOIN  -->
<!--             EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO -->
<!--         JOIN  -->
<!--             EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO -->
<!--         WHERE  -->
<!--             ER.EMP_NO = #{empNo} -->
<!--         ORDER BY SEND_DATE DESC -->
<!--     </sql> -->

	<!-- resultmap -->
	<resultMap type="emailVO" id="emailMap">
		<result property="emailNo" column="EMAIL_NO"/>
		<result property="senderEmplNo" column="SENDER_EMPL_NO"/>
		<result property="emailSj" column="EMAIL_SJ"/>
		<result property="emailCn" column="EMAIL_CN"/>
		<result property="sendDate" column="SEND_DATE"/>
		<result property="tmprStre" column="TMPR_STRE"/>
		<result property="atchmnflNo" column="ATCHMNFL_NO"/>
		<result property="delCd" column="DEL_CD"/>
		<collection property="emailRVOList" resultMap="emailRecipientMap"></collection>
	</resultMap>
	
	<resultMap type="emailRecipientVO" id="emailRecipientMap">
		<result property="emailNo" column="EMAIL_NO"/>
		<result property="empNo" column="EMP_NO"/>
		<result property="cnfirmDate" column="CNFIRM_DATE"/>
		<result property="delCd" column="DEL_CD"/>
	</resultMap>
	
	<!-- 페이지 관련 시작 -->
	<select id="getTotal" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
		FROM(
        SELECT 
            E.SENDER_EMPL_NO,
            E.EMAIL_SJ,
            E.SEND_DATE,
            ER.CNFIRM_DATE,
            E.ATCHMNFL_NO,
            EM.EMP_NM,
            EM.EMAIL AS SENDER_EMAIL
        FROM 
            EMAIL E
        JOIN 
            EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
        JOIN 
            EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO
        WHERE 
            ER.EMP_NO = #{empNo}
        ORDER BY SEND_DATE DESC
		)
	</select>
	
		<!-- 임시 보관 이메일 총 개수 V-->
	<select id="getTemporaryMailCount" parameterType="emailVO" resultType="int">
		SELECT COUNT(*)
        FROM (
            SELECT DISTINCT
                E.EMAIL_NO
            FROM
                EMAIL E
            JOIN
                EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
            WHERE
                ER.EMP_NO = #{empNo}
                AND ER.DEL_CD = '0'
                AND E.TMPR_STRE = '1'
        )	
	</select>
	
		<!-- 보낸 이메일 총 개수 V-->
	<select id="getSendMailCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM (
            SELECT DISTINCT
                E.EMAIL_NO
            FROM
                EMAIL E
            JOIN
                EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
            WHERE
                E.SENDER_EMPL_NO = #{empNo}
                AND ER.DEL_CD = '0'
                AND E.TMPR_STRE = '0'
        )
	</select>
	
		<!-- 받은 이메일 총 개수 V-->
	<select id="getMailCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM (
            SELECT DISTINCT
                E.EMAIL_NO
            FROM
                EMAIL E
            JOIN
                EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
            WHERE
                ER.EMP_NO = #{empNo}
                AND ER.DEL_CD = '0'
                AND E.TMPR_STRE = '0'
        )
	</select>
	
		<!-- 아직 읽지 않은 이메일 개수 V-->
	<select id="getNoreadCount" parameterType="hashMap" resultType="int">
		SELECT COUNT(*)
        FROM (
            SELECT DISTINCT
                E.EMAIL_NO
            FROM
                EMAIL E
            JOIN
                EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
            WHERE
                ER.EMP_NO = #{empNo}
                AND ER.DEL_CD = '0'
                AND E.TMPR_STRE = '0'
                AND ER.CNFIRM_DATE IS NULL
        )
	</select>
	
		<!-- 휴지통 이메일 개수 -->
	<select id="getDeleteCount">
	
	</select>
	<!-- 페이지 관련 끝 -->
	
	<!-- 메일 쓰기 관련 시작 -->
	<!-- 메일 쓰기 emailVO -->
	<insert id="insertMail" parameterType="emailVO">
	    <selectKey keyProperty="emailNo" resultType="String" order="BEFORE">
	        SELECT SEQ_EMAIL.NEXTVAL AS EMAIL_NO FROM DUAL
	    </selectKey>
	    INSERT INTO EMAIL (EMAIL_NO, SENDER_EMPL_NO, EMAIL_SJ, EMAIL_CN, ATCHMNFL_NO)
	    VALUES (#{emailNo}, #{empNo}, #{emailSj}, #{emailCn}, NULL)
	</insert>
	<!-- 메일 쓰기 emailRecipientVO -->
	<insert id="insertRMail" parameterType="emailRecipientVO">
		<selectKey keyProperty="emailNo" resultType="String" order="BEFORE">
	        SELECT MAX(TO_NUMBER(EMAIL_NO)) AS EMAIL_NO FROM EMAIL
	    </selectKey>
		INSERT INTO EMAIL_RECIPIENT(EMAIL_NO, EMP_NO)
		VALUES (#{emailNo}, #{empNo})
	</insert>

	<!-- 메일 쓰기 관련 끝 -->
	
	<!-- 상세보기 관련 시작 -->
	<update id="putCnfirmDate" parameterType="emailVO">
		UPDATE EMAIL_RECIPIENT
		SET CNFIRM_DATE = CASE
		                     WHEN CNFIRM_DATE IS NULL THEN SYSDATE
		                     ELSE CNFIRM_DATE
		                  END
		WHERE EMAIL_NO = #{emailNo} AND EMP_NO = #{empNo}
		
	</update>
	<select id="getMailDetail" parameterType="String" resultType="emailVO">
		SELECT
		    E.EMAIL_NO,
		    E.SENDER_EMPL_NO,
		    EM1.EMP_NM AS SENDER_NAME,
		    EM1.EMAIL AS SENDER_EMAIL,
		    EM1.POSITION_CD AS SENDER_POSITION,
		    E.EMAIL_SJ,
		    E.EMAIL_CN,
		    E.SEND_DATE,
		    E.TMPR_STRE,
		    E.ATCHMNFL_NO,
		    ER.CNFIRM_DATE,
		    ER.DEL_CD AS RECIPIENT_DEL_CD,
		    EM2.EMP_NM AS RECIPIENT_NAME,
		    EM2.EMAIL AS RECIPIENT_EMAIL,
		    EM2.DEPT_NO AS RECIPIENT_DEPT_NO 
		FROM
		    EMAIL E
		JOIN
		    EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
		JOIN
		    EMPLOYEE EM1 ON E.SENDER_EMPL_NO = EM1.EMP_NO
		JOIN
		    EMPLOYEE EM2 ON ER.EMP_NO = EM2.EMP_NO
		WHERE
		    E.EMAIL_NO = #{emailNo}
	</select>	
	<!-- 상세보기 관련 끝 -->
	
	<!-- 받은메일함(메인) 관련 시작 -->
	<select id="getMailList" parameterType="hashMap" resultType="emailVO">
		WITH T AS (
		SELECT 
		    ROWNUM RNUM,
		    EMAIL_NO,
		    SENDER_EMPL_NO,
		    SENDER_NAME,
		    EMAIL_SJ,
		    SEND_DATE,
		    CNFIRM_DATE,
		    ATCHMNFL_NO,
		    SENDER_EMAIL
		FROM (
		    SELECT
		        E.EMAIL_NO,
		        E.SENDER_EMPL_NO,
		        EM.EMP_NM AS SENDER_NAME,
		        E.EMAIL_SJ,
		        E.SEND_DATE,
		        ER.CNFIRM_DATE,
		        E.ATCHMNFL_NO,
		        EM.EMAIL AS SENDER_EMAIL
		    FROM
		        EMAIL E
		    JOIN
		        EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
		    JOIN
		        EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO
		    WHERE
		        ER.EMP_NO = #{empNo}
		        AND ER.DEL_CD = '0'
		    ORDER BY
		        E.SEND_DATE DESC
		)) SELECT T.* FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
		ORDER BY RNUM
	</select>	
	

	


	<!-- 받은메일함(메인) 관련 끝 -->
	
	<!-- 보낸메일함 관련 시작 -->
	<select id="getSendList" parameterType="hashMap" resultType="emailVO">
		WITH T AS (
		SELECT 
		    ROWNUM RNUM,
		    EMAIL_NO,
		    SENDER_EMPL_NO,
		    SENDER_NAME,
		    EMAIL_SJ,
		    SEND_DATE,
		    CNFIRM_DATE,
		    ATCHMNFL_NO,
		    SENDER_EMAIL
		FROM (
		    SELECT DISTINCT
		        E.EMAIL_NO,
		        E.SENDER_EMPL_NO,
		        EM.EMP_NM AS SENDER_NAME,
		        E.EMAIL_SJ,
		        E.SEND_DATE,
		        ER.CNFIRM_DATE,
		        E.ATCHMNFL_NO,
		        EM.EMAIL AS SENDER_EMAIL
		    FROM
		        EMAIL E
		    JOIN
		        EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
		    JOIN
		        EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO
		    WHERE
		        E.SENDER_EMPL_NO = #{empNo}
		        AND ER.DEL_CD = '0'
		        AND E.TMPR_STRE = '0'
		    ORDER BY
		        E.SEND_DATE DESC
		)) SELECT T.* FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
		ORDER BY RNUM
	</select>

	<!-- 보낸메일함 관련 끝 -->
	
	<!-- 첨부파일메일함 관련 시작 -->
	
	<!-- 첨부파일메일함 관련 끝 -->
	
	<!-- 휴지통 관련 시작 -->
	<select id="getDeleteList" parameterType="hashMap" resultType="emailVO">
		WITH T AS (
	    SELECT
	        ROWNUM RNUM,
	        E.EMAIL_NO,
	        E.SENDER_EMPL_NO,
	        EM.EMP_NM AS SENDER_NAME,
	        E.EMAIL_SJ,
	        E.SEND_DATE,
	        ER.CNFIRM_DATE,
	        E.ATCHMNFL_NO,
	        EM.EMAIL AS SENDER_EMAIL
	    FROM
	        EMAIL E
	    JOIN
	        EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
	    JOIN
	        EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO
	    WHERE
	        ER.EMP_NO = #{empNo}
	        AND ER.DEL_CD = '1'
	        AND ER.CNFIRM_DATE IS NULL
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
		ORDER BY RNUM		
	</select>
	<!-- 휴지통 관련 끝 -->
	
	<!-- 안읽은메일함 관련 시작 -->
	<select id="getUnreadList" parameterType="hashMap" resultType="emailVO">
		WITH T AS (
	    SELECT
	        ROWNUM RNUM,
	        E.EMAIL_NO,
	        E.SENDER_EMPL_NO,
	        EM.EMP_NM AS SENDER_NAME,
	        E.EMAIL_SJ,
	        E.SEND_DATE,
	        ER.CNFIRM_DATE,
	        E.ATCHMNFL_NO,
	        EM.EMAIL AS SENDER_EMAIL
	    FROM
	        EMAIL E
	    JOIN
	        EMAIL_RECIPIENT ER ON E.EMAIL_NO = ER.EMAIL_NO
	    JOIN
	        EMPLOYEE EM ON E.SENDER_EMPL_NO = EM.EMP_NO
	    WHERE
	        ER.EMP_NO = #{empNo}
	        AND E.DEL_CD = '0'
	        AND ER.CNFIRM_DATE IS NULL
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
		ORDER BY RNUM
	</select>

	<!-- 안읽은메일함 관련 끝 -->
	
	<!-- 임시저장메일함 관련 시작 -->
	<select id="getTemporaryList" parameterType="hashMap" resultType="emailVO">
		WITH T AS (
	    SELECT
            ROWNUM RNUM, 
            EMAIL_NO, 
            SENDER_EMPL_NO, 
            EMAIL_SJ, 
            EMAIL_CN, 
            SEND_DATE, 
            TMPR_STRE, 
            ATCHMNFL_NO, 
            DEL_CD
	    FROM
	        EMAIL
	    WHERE
	        SENDER_EMPL_NO = #{empNo} AND DEL_CD = '0' AND TMPR_STRE = '1'
		)
		SELECT * FROM T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) - (10 - 1) AND (#{currentPage} * 10)
		ORDER BY RNUM            
	</select>

	<insert id="insertTemporaryMail" parameterType="emailVO">
		    <selectKey keyProperty="emailNo" resultType="String" order="BEFORE">
	        SELECT SEQ_EMAIL.NEXTVAL AS EMAIL_NO FROM DUAL
	    </selectKey>
	    INSERT INTO EMAIL (EMAIL_NO, SENDER_EMPL_NO, EMAIL_SJ, EMAIL_CN, TMPR_STRE, ATCHMNFL_NO)
	    VALUES (#{emailNo}, #{empNo}, #{emailSj}, #{emailCn}, '1', NULL)
	</insert>
		<insert id="insertTemporaryRMail" parameterType="emailRecipientVO">
		<selectKey keyProperty="emailNo" resultType="String" order="BEFORE">
	        SELECT MAX(TO_NUMBER(EMAIL_NO)) AS EMAIL_NO FROM EMAIL
	    </selectKey>
		INSERT INTO EMAIL_RECIPIENT(EMAIL_NO, EMP_NO)
		VALUES (#{emailNo}, #{empNo})
	</insert>
	<!-- 임시저장메일함 관련 끝 -->
</mapper>