package com.team1.workforest.chat.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.team1.workforest.chat.service.ChattingService;
import com.team1.workforest.chat.vo.ChatRoomEmployeeVO;
import com.team1.workforest.chat.vo.ChatRoomVO;
import com.team1.workforest.chat.vo.MessageVO;
import com.team1.workforest.employee.vo.EmployeeVO;
import com.team1.workforest.test123.service.ChatServiceImpl;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/chat")
public class ChattingController {

	@Autowired
	ChattingService chattingService;
	
	@GetMapping("/main")
	public String chatChat(@RequestParam String empNo, Model model) {
		
		model.addAttribute("empNo",empNo);
		
		return "chat/main2";
	}
	
	@ResponseBody
	@GetMapping("/getAllChatRoom")
	public List<ChatRoomVO> getAllChatRoom() {
		
		List<ChatRoomVO> chatRoomVOList = this.chattingService.getAllChatRoom();
		
		return chatRoomVOList;
	}
	
	@ResponseBody
	@GetMapping("/getChatRoom")
	public List<ChatRoomEmployeeVO> getChatRoom(@RequestParam Map<String, String> map) {
		
		List<ChatRoomEmployeeVO> chatEmpVOList = this.chattingService.getChatRoom(map);
		
		return chatEmpVOList;
	}
	
	@ResponseBody
	@GetMapping("/getOverMsgCount")
	public int getOverMsgCount(@RequestParam Map<String, String> map) {
		
		int count = this.chattingService.getOverMsgCount(map);
		
		return count;
	}
	
	@ResponseBody
	@GetMapping("/getChat")
	public List<MessageVO> getChat(@RequestParam Map<String, String> map) {
		
		List<MessageVO> msgVOList = this.chattingService.getChat(map);
		
		return msgVOList;
	}
	
	@ResponseBody
	@PostMapping("/addChat")
	public int addChat(@RequestParam Map<String, String> map) {
		
		int data = this.chattingService.addChat(map);
		
		return data;
	}
	
	@ResponseBody
	@GetMapping("/getEmp")
	public EmployeeVO getEmp(@RequestParam Map<String, String> map) {
		
		EmployeeVO data = this.chattingService.getEmp(map);
		
		return data;
	}
	
	@ResponseBody
	@GetMapping("/getChatRoomLastChat")
	public MessageVO getChatRoomLastChat(@RequestParam Map<String, String> map) {
		
		MessageVO data = this.chattingService.getChatRoomLastChat(map);
		
		return data;
	}
	
	@ResponseBody
	@GetMapping("/getEmpList")
	public List<EmployeeVO> getEmpList(@RequestParam Map<String, String> map) {
		
		List<EmployeeVO> data = this.chattingService.getEmpList(map);
		
		return data;
	}
	
	@ResponseBody
	@PostMapping("/addNewChatRoom")
	public int addNewChatRoom(@RequestBody Map<String, String[]> map) {
		int data = this.chattingService.addNewChatRoom(map);
		
		return data;
	}
	
	@ResponseBody
	@GetMapping("/getChatRoomEmp")
	public List<ChatRoomEmployeeVO> getChatRoomEmp(@RequestParam Map<String, String> map) {
		List<ChatRoomEmployeeVO> data = this.chattingService.getChatRoomEmp(map);
		
		return data;
	}
	
	@ResponseBody
	@PutMapping("/modChatRoomNm")
	public int modChatRoomNm(@RequestBody Map<String, String> map) {
		
		int data = this.chattingService.modChatRoomNm(map);
		
		return data;
	}
	
	@ResponseBody
	@PutMapping("/modChatEmpDate")
	public int modChatEmpDate(@RequestBody Map<String, String> map) {
		
		int data = this.chattingService.modChatEmpDate(map);
		
		return data;
	}
	
	@ResponseBody
	@DeleteMapping("/deleteChatRoom")
	public int deleteChatRoom(@RequestBody Map<String, String> map) {
		
		int data = this.chattingService.deleteChatRoom(map);
		
		return data;
	}
	
}