package com.team1.workforest.vacation.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.team1.workforest.employee.vo.EmployeeVO;
import com.team1.workforest.vacation.mapper.VacationMapper;
import com.team1.workforest.vacation.service.VacationService;
import com.team1.workforest.vacation.vo.EmpVacationManageVO;
import com.team1.workforest.vacation.vo.VacationRecordVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class VacationServiceImpl implements VacationService{
	
	@Autowired
	VacationMapper vacationMapper;

	// 내 휴가 목록(잔여 휴가 개수) 가져오기
	@Override
	public List<EmpVacationManageVO> getMyVacationList(EmpVacationManageVO empVcatnManageVO) {
		return vacationMapper.getMyVacationList(empVcatnManageVO);

	}
	
	// 내 특정 휴가 정보 가져오기
	@Override
	public EmpVacationManageVO getMyVacation(EmpVacationManageVO empVcatnManageVO) {
		return vacationMapper.getMyVacation(empVcatnManageVO);
	}
	
	// 결재 라인 불러오기
	@Override
	public List<EmployeeVO> getApvLine(String empNo, int apvLevel) {
		List<EmployeeVO> apvLines = new ArrayList<EmployeeVO>();
		
		EmployeeVO firstEmpVO = vacationMapper.getApvLine(empNo);
		apvLines.add(0, firstEmpVO);
		
		if(apvLevel == 2) {
			String SupEmpNo = firstEmpVO.getEmpNo();
			log.info(SupEmpNo);
			
			EmployeeVO secondEmpVO = vacationMapper.getApvLine(empNo);
			log.info("secondEmpVO : {}", secondEmpVO);
			apvLines.add(1, secondEmpVO);
		}
		return apvLines;
	}
	
	// 지난 휴가 가져오기
	@Override
	public Map<String, List<VacationRecordVO>> getMyVacationRecordList(VacationRecordVO vacationRecordVO) {
		List<VacationRecordVO> records = vacationMapper.getMyVacationRecordList(vacationRecordVO);
		log.info("records : {}", records);
		
		Map<String, List<VacationRecordVO>> recordGroups = new HashMap<String, List<VacationRecordVO>>();
		for(VacationRecordVO record : records) {
			if(!recordGroups.containsKey(record.getApvNo())) {
				recordGroups.put(record.getApvNo(), new ArrayList<VacationRecordVO>());
			}
			recordGroups.get(record.getApvNo()).add(record);
		}
		return recordGroups;
	}

	// 사용 연차 카운트
	@Override
	public float getVacationRecordsCount(VacationRecordVO vacationRecordVO) {
		// 종일 연차 카운트
		int allDayCount = vacationMapper.getAllDayVacationRecordsCount(vacationRecordVO);
		// 반차 카운트
		float halfDayCount = vacationMapper.getHalfDayVacationRecordsCount(vacationRecordVO);
		
		float AllVacationRecordsCount = allDayCount + (halfDayCount / 2);
		log.info("count : {}", AllVacationRecordsCount);		
		
		return AllVacationRecordsCount;
	}

	// 휴가 등록
	@Override
	public int createVacation(VacationRecordVO vacationRecordVO) {
		log.info("vacationRecordVO : {}", vacationRecordVO);
		String vcatnUseDate = vacationRecordVO.getVcatnUseDate();
		// log.debug("체킁: {}",vcatnUseDate);
		String[] vcatnUseDateArr = vcatnUseDate.split(",");
		String vcatnSeCd = vacationRecordVO.getVcatnSeCd();
		String[] vcatnSeCdArr = vcatnSeCd.split(",");
		
		//log.info("vcatnUseDateArr : " + vcatnUseDateArr[0] + " : " + vcatnUseDateArr[1]);
		//log.info("vcatnSeCdArr : " + vcatnSeCdArr.length);  // Log -> Simple Log4j가 배열을 무시하는 듯
		
		// 결재 인서트
		
		// 결재번호 가져오기
		
		// 결재 라인 인서트
		
		
		int result = 0;
		
		// 휴가 사용 일자마다 insert
		for (int i = 0; i < vcatnUseDateArr.length; i++) {
			VacationRecordVO record = new VacationRecordVO();
			record.setVcatnUseDate(vcatnUseDateArr[i]);						// 사용일자
			record.setEmpNo(vacationRecordVO.getEmpNo());					// 사원번호
			record.setVcatnCtgryNo(vacationRecordVO.getVcatnCtgryNo());		// 휴가종류번호
			record.setGiveYear(vacationRecordVO.getGiveYear());				// 휴가지급연도
			record.setVcatnCn(vacationRecordVO.getVcatnCn());				// 휴가내용
			record.setVcatnSeCd(vcatnSeCdArr[i]);							// 휴가구분코드
			
			result += vacationMapper.createVacation(record);
		}

		return 0;
	}

	

	

	

}
