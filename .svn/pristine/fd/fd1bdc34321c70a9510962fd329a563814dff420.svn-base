package com.team1.workforest.reservation.meetingroom.controller;

import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.team1.workforest.reservation.meetingroom.service.MtrResveService;
import com.team1.workforest.reservation.meetingroom.vo.MtrReservationVO;
import com.team1.workforest.schedule.vo.ScheduleVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
@RequestMapping("/api/reservation")
public class MtrResveController {
	
	@Autowired
	MtrResveService mtrResveService;

	// 회의실 예약 리스트 불러오기
	@GetMapping("/mtrs")
	public JSONArray getMtrResveList() {

		List<MtrReservationVO> mtrResveList = mtrResveService.getMtrResveList();

		JSONArray jsonArr = new JSONArray();

		for (MtrReservationVO mtrResve : mtrResveList) {
			JSONObject jsonObj = new JSONObject();
			jsonObj.put("mtrResveNo", mtrResve.getMtrResveNo());
			jsonObj.put("mtrNo", mtrResve.getMtrNo());
			jsonObj.put("empNo", mtrResve.getEmpNo());
			jsonObj.put("start", mtrResve.getResveBeginDate());
			jsonObj.put("end", mtrResve.getResveEndDate());
			jsonObj.put("content", mtrResve.getResveCn());
			jsonObj.put("title", mtrResve.getMtrVO().getMtrLoc() + "(" + mtrResve.getMtrVO().getMtrNm() + ")");
			jsonArr.add(jsonObj);
		}

		return jsonArr;
	}	
	
	// 특정 예약 불러오기
	@GetMapping("/mtr/{mtrResveNo}")
	public MtrReservationVO getMtrResve(@PathVariable String mtrResveNo) {
		return mtrResveService.getMtrResve(mtrResveNo);
		
	}
	
	// 내 예약 불러오기
	@GetMapping("/mtrs/{empNo}")
	public MtrReservationVO getMyMtrResve(@PathVariable String empNo) {
		return mtrResveService.getMyMtrResve(empNo);
		
	}
	
	// 회의실 예약 추가
	@PostMapping("/mtr")
	public String createMtrResve(@RequestBody MtrReservationVO mtrResveVO) {
		
		int result = mtrResveService.createMtrResve(mtrResveVO);
		
		if (result != 0) {
			return "success";
		}
		return "fail";	
	}
	// 회의실 예약 수정
	@PutMapping("/mtr")
	public String updateMtrResve(@RequestBody MtrReservationVO mtrResveVO) {
		
		int result = mtrResveService.updateMtrResve(mtrResveVO);
		
		if (result != 0) {
			return "success";
		}
		return "fail";	
	}
	
	// 회의실 예약 취소
	@DeleteMapping("/mtr/{mtrResveNo}")
	public String deleteMtrResve(@PathVariable String mtrResveNo) {
		
		int result = mtrResveService.deleteMtrResve(mtrResveNo);
		
		if (result != 0) {
			return "success";
		}
		return "fail";	
	}
	
}
