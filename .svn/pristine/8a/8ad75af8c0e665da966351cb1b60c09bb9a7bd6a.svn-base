package com.team1.workforest.schedulerUtil.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;

import com.team1.workforest.reservation.meetingroom.vo.MtrReservationVO;
import com.team1.workforest.schedulerUtil.service.MtrServiceImpl;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
@EnableScheduling
public class Schedular {
	
	@Autowired
	MtrServiceImpl mtrServiceImpl;
	
	@Scheduled(cron = "0 0 17 * * *")// 초 분 시 일 
	public void run() {
		log.error("==========================");
	}
	
	
	@Scheduled(cron = "0 41 12 * * *")
	public void sendMsg() throws Exception {
		List<WebSocketSession> list = ChatHandler.list;
		TextMessage message = new TextMessage("안녕하세요");
		
		for (WebSocketSession webSocketSession : list) {
			webSocketSession.sendMessage(message);
		}
		
	}
	
	@Scheduled(cron = "0 30 9-18 * * *")
	public void mtrMsg() throws Exception {
		// 1시간마다 현재시간과 가장 가까운 시간대의 예약 vo를 받아와서 메세지에 예약자의 사원번호를 담아서 웹소켓메세지로 뿌린다.
		// 그러면 jsp에서 메세지 받았을때 기능으로 만들어둔 부분에서 사원번호가 메세지에 담긴 사원만 따로 기능을 만들면 알림을 해당사원만 보이게 할 수 있다.
		// 동시에 ajax로 알림테이블에 넣으면 끝
		log.error("==========================");
		List<String> mtrNoList = this.mtrServiceImpl.getMtr();
		List<WebSocketSession> list = ChatHandler.list;
		
		for(String mtrNo:mtrNoList) {
			
			MtrReservationVO vo = this.mtrServiceImpl.getMtrReservation(mtrNo);
			if(vo != null) {
				TextMessage message = new TextMessage(" :%" + vo.getEmpNo() + ":%신청하신 "+vo.getMtrLoc()+"호 회의실 예약 시간까지 30분 남았습니다 :%mReserve");
				
				for (WebSocketSession webSocketSession : list) {
					webSocketSession.sendMessage(message);
				}
				
			}
			
		}
		
		
	}
	
	
}
