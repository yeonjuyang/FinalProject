package com.team1.workforest.attendance.service.impl;

import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Map;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.team1.workforest.attendance.mapper.AttendanceMapper;
import com.team1.workforest.attendance.service.AttendanceService;
import com.team1.workforest.attendance.vo.AttendanceManageVO;

@Service
public class AttendanceServiceImpl implements AttendanceService{

	@Autowired
	AttendanceMapper attendanceMapper;
	

	@Override
	public JSONObject getAttendanceList(Map<String, String> map) {
		
		List<AttendanceManageVO> attendanceVOList = this.attendanceMapper.getAttendanceList(map);
		
		JSONObject data = new JSONObject();
		/*
		jsonData : {
			"cols":[
			{"id":"","label":"상품명","pattern":"","type":"string"},
			{"id":"","label":"금액","pattern":"","type":"number"}
			],
			"rows":[
			{"c":[{"v":"귤"},{"v":35000}]},
			{"c":[{"v":"딸기"},{"v":88000}]},
			{"c":[{"v":"레몬"},{"v":16500}]},
			{"c":[{"v":"오렌지"},{"v":20000}]},
			{"c":[{"v":"키위"},{"v":30000}]},
			{"c":[{"v":"포도"},{"v":15000}]}
			]
		}
	*/
	
	JSONObject col1 = new JSONObject();
	JSONObject col2 = new JSONObject();
	
	JSONArray title = new JSONArray();
	
	col1.put("label", "날짜");
	col1.put("type", "string");
	col2.put("label", "근무시간");
	col2.put("type", "number");
	title.add(col1);
	title.add(col2);
	data.put("cols", title);
	
	SimpleDateFormat sf = new SimpleDateFormat("MM.dd");
	
	JSONArray body = new JSONArray();
	
	for(AttendanceManageVO attendanceVO : attendanceVOList) {
		
		JSONObject date = new JSONObject();
		date.put("v", sf.format(attendanceVO.getAttendTime()));
		JSONObject time = new JSONObject();
		time.put("v", attendanceVO.getTotal());
		JSONArray row = new JSONArray();
		row.add(date);
		row.add(time);
		JSONObject cell = new JSONObject();
		cell.put("c",row);
		body.add(cell);
	}
	
	data.put("rows", body);
		return data;
	}


	@Override
	public String getPlusTime(Map<String, String> map) {
		return this.attendanceMapper.getPlusTime(map);
	}


	@Override
	public String getMinusTime(Map<String, String> map) {
		return this.attendanceMapper.getMinusTime(map);
	}


	@Override
	public String getOverTime(Map<String, String> map) {
		return this.attendanceMapper.getOverTime(map);
	}


	@Override
	public String getAvgAttend(Map<String, String> map) {
		return this.attendanceMapper.getAvgAttend(map);
	}


	@Override
	public String getAvgLeave(Map<String, String> map) {
		return this.attendanceMapper.getAvgLeave(map);
	}


	@Override
	public String getAvgWork(Map<String, String> map) {
		return this.attendanceMapper.getAvgWork(map);
	}


	@Override
	public String getLateCount(Map<String, String> map) {
		return this.attendanceMapper.getLateCount(map);
	}


	@Override
	public String getRestCount(Map<String, String> map) {
		return this.attendanceMapper.getRestCount(map);
	}


	@Override
	public String getOut1Count(Map<String, String> map) {
		return this.attendanceMapper.getOut1Count(map);
	}


	@Override
	public String getOut2Count(Map<String, String> map) {
		return this.attendanceMapper.getOut2Count(map);
	}


	@Override
	public String getOut3Count(Map<String, String> map) {
		return this.attendanceMapper.getOut3Count(map);
	}


	@Override
	public int insertAttend(Map<String, String> map) {
		return this.attendanceMapper.insertAttend(map);
	}

	@Override
	public int insertLvffc(Map<String, String> map) {
		return this.attendanceMapper.insertLvffc(map);
	}

	@Override
	public String getAttendTime(Map<String, String> map) {
		return this.attendanceMapper.getAttendTime(map);
	}
	
	@Override
	public String getLvffcTime(Map<String, String> map) {
		return this.attendanceMapper.getLvffcTime(map);
	}


	@Override
	public String getTodayWorkTime(Map<String, String> map) {
		return this.attendanceMapper.getTodayWorkTime(map);
	}
	
	@Override
	public List<String> getWeekWorkTime(Map<String, String> map) {
		return this.attendanceMapper.getWeekWorkTime(map);
	}





}
