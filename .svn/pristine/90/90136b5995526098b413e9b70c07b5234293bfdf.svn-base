package com.team1.workforest.approval.service.impl;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.support.TransactionTemplate;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.team1.workforest.approval.mapper.ApprovalMapper;
import com.team1.workforest.approval.service.ApprovalService;
import com.team1.workforest.approval.vo.ApvBkmkVO;
import com.team1.workforest.approval.vo.ApvLineBkmkVO;
import com.team1.workforest.approval.vo.ApvLineVO;
import com.team1.workforest.approval.vo.ApvReferVO;
import com.team1.workforest.approval.vo.ApvVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class ApprovalServiceImpl implements ApprovalService {
	
    private PlatformTransactionManager transactionManager;

    public void setTransactionManager(PlatformTransactionManager transactionManager) {
        this.transactionManager = transactionManager;
    }
	
	@Autowired
	private ApprovalMapper approvalMapper;
	
	@Autowired
	private HttpSession session;
	
	// 기안 상신
	@Override
	public int create(Map<String, Object> apvMap) {
		
      TransactionTemplate transactionTemplate = new TransactionTemplate(transactionManager);
        return transactionTemplate.execute(status -> {
            // 트랜잭션 내에서 수행될 작업들
        	
    		log.info("apvMap : {} " , apvMap);
    		
    		ObjectMapper mapper = new ObjectMapper();
    		
    		// JSON을 VO로 변환
    		ApvVO apvVo = mapper.convertValue(apvMap.get("apv"), ApvVO.class);
    		
    		log.info("apvVo -> {} ", apvVo);
    		
    		// 기안 상신 등록
    		int cnt = approvalMapper.create(apvVo);
    		log.debug("create -> apvVo(후) : {}", apvVo);
    		
    		try {
    			// JSON을 VO로 변환
    			List<ApvLineVO> apvLineList = mapper.convertValue(apvMap.get("apvLine"), new TypeReference<List<ApvLineVO>>() {});
    			List<ApvReferVO> apvReferList = mapper.convertValue(apvMap.get("refer"), new TypeReference<List<ApvReferVO>>() {});
    	        
    			log.info("apvLineList -> {} ", apvLineList);
    	        log.info("apvReferList -> {} ", apvReferList);
    	        
    	        apvLineList.get(0).setApvDate(apvVo.getDrftDate()); // 기안 날짜 설정
    	        
    	        // 결재 상태 
    	        apvLineList.get(0).setApvSttusCd("Y"); // 기안자 상태 (Y = 기안 상신, N = 반려 또는 회수)
            	apvLineList.get(1).setApvSttusCd("0"); // 검토자 상태 (0 = 승인 전, Y = 승인, N = 반려)
            	apvLineList.get(2).setApvSttusCd("0"); // 결재자 상태 (0 = 승인 전, Y = 승인, N = 반려)
            	
    	        log.info("(상태변경) apvLineList -> {} ", apvLineList);
    	        
    	        // 결재라인 등록
    	        cnt += approvalMapper.createApvLine(apvLineList);
    	        
    	        // 참조자 등록
    	        cnt += approvalMapper.createRefer(apvReferList);
    	        
    	        log.info("cnt : {} " , cnt);
    	        
    	        // 기안 상신 성공
    	        if(cnt > 0) {
    	        	int apvNo = apvVo.getApvNo(); // 생성된 결재번호
    	        	return apvNo;
    	        }
    	        
    	        // 기안 상신 실패
    	        else {
    	        	return cnt;
    	        }
    	        
    		} catch (Exception e) {
                log.error("Error in create method: {}", e.getMessage());
                status.setRollbackOnly(); // 트랜잭션 롤백 처리
                return 0;
    		}
        });
	}
	
	// 결재 상세
	@Override
	public List<ApvVO> approvalDetailView(Map<String, Object> map) {
		return approvalMapper.approvalDetailView(map);
	}

	// 즐겨찾기 저장
	@Override
	public int createBkmk(Map<String, Object> bkmkMap) {
		String empNo = (String) session.getAttribute("empNo");
		
		// 사원번호가 없을 경우
		if (empNo == null || empNo.isEmpty()) {
		   throw new IllegalArgumentException("사원 번호 (empNo)는 null이거나 비어 있을 수 없습니다.");
		}
		
		bkmkMap.put("empNo", empNo);
		
		// 즐겨찾기 생성
		int cnt = approvalMapper.createBkmk(bkmkMap);
		
		// 즐겨찾기 상세 생성
		int detailCnt = approvalMapper.createBkmkDetail(bkmkMap);
		
		return detailCnt;
	}

	// 즐겨찾기 목록 조회
	@Override
	public List<ApvBkmkVO> getBkmkList() {
		return approvalMapper.getBkmkList();
	}
	
	// 즐겨찾기 상세 조회
	@Override
	public List<ApvBkmkVO> getBkmkDetail(int bkmkNo) {
		return approvalMapper.getBkmkDetail(bkmkNo);
	}

	// 즐겨찾기 삭제
	@Override
	public int deleteBkmk(int bkmkNo) {
		return approvalMapper.deleteBkmk(bkmkNo);
	}

	// 즐겨찾기 수정
	@Override
	public int updateBkmk(ApvLineBkmkVO bkmkVO) {
		return approvalMapper.updateBkmk(bkmkVO);
	}



}
